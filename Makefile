#----------------------------------------------------------------------------------------------------------------------
# Default target is 'all'
#----------------------------------------------------------------------------------------------------------------------
.DEFAULT_GOAL := all
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Definition of code generation related variables
#----------------------------------------------------------------------------------------------------------------------
TARGET		:=  Palette
BUILD		:=	build
LIB			:=	lib
OUTPUT		:=	$(LIB)/lib$(TARGET).a
OBJDIR		:=	build/objs
DEPDIR		:=	build/deps
INCLUDE		:=	include
SOURCE		:=	source
CXXFLAGS	:=	-Wall -O3 -I$(INCLUDE)
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Definition of variables which store file locations
#----------------------------------------------------------------------------------------------------------------------
CPPFILES 	:= $(shell find $(SOURCE)/ -name "*.cpp")
OBJS     	:= $(CPPFILES:$(SOURCE)/%.cpp=$(OBJDIR)/%.o)
DEPS     	:= $(CPPFILES:$(SOURCE)/%.cpp=$(DEPDIR)/%.d)
TREE     	:= $(sort $(patsubst %/,%,$(dir $(OBJS))))
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Include dependent files if they already exist
#----------------------------------------------------------------------------------------------------------------------
ifeq "$(MAKECMDGOALS)" ""
-include $(DEPS)
endif
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Define few virtual make targets
#----------------------------------------------------------------------------------------------------------------------
.PHONY: all clean
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Define target rule pre-requisites
#----------------------------------------------------------------------------------------------------------------------
all : $(OUTPUT)

.SECONDEXPANSION:
$(OBJDIR)/%.o: $(SOURCE)/%.cpp | $$(@D)
	@echo Compiling $*.o...
	@$(CXX) -MMD -MP -MF $(@:$(OBJDIR)/%.o=$(DEPDIR)/%.d) $(CXXFLAGS) -o $@ -c $<

$(OUTPUT) : $(OBJS)
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Define rule recipe `clean`
#----------------------------------------------------------------------------------------------------------------------
clean:
	@echo -n Cleaning build files...
	@rm -rf $(BUILD) $(LIB)
	@echo Done!
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Define rule recipe `$(OUTPUT)`
#----------------------------------------------------------------------------------------------------------------------
$(OUTPUT):
	@[ -d $(LIB) ] || mkdir -p $(LIB)
	@rm -rf $(OUTPUT)
	@echo -n Creating $(TARGET) library archive at $(OUTPUT)...
	@$(AR) -rc $(OUTPUT) $(OBJS)
	@echo Done!
#----------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
# Define rule recipe `$(TREE)` (creates directories for .o and .d files)
#----------------------------------------------------------------------------------------------------------------------
$(TREE): %:
	@mkdir -p $@
	@mkdir -p $(@:$(OBJDIR)%=$(DEPDIR)%)